@using System.Web.Services.Description
@using Newtonsoft.Json
@model HappySitter.Models.SearchSitterViewModel

@{
    ViewBag.Title = "Create";

    string serviceDateString ="";
    string fromTime = "";
    string toTime = "";
    DateTime serviceDate = DateTime.Now;

    if (Session["ServiceDate"] != null)
    {
        DateTime serviceDateTemp = Convert.ToDateTime(Session["ServiceDate"]);
        serviceDate = serviceDateTemp;
        serviceDateString = serviceDateTemp.ToString("MMMM dd yyyy");
        fromTime = Session["fromTime"].ToString();
        toTime = Session["toTime"].ToString();
    };

}

<style>
    /* Always set the map height explicitly to define the size of the div
    * element that contains the map. */
    #map {
        min-height: 450px;
        height: 100%;
    }
    /* Optional: Makes the sample page fill the window. */
    html, body {
        height: 100%;
        margin: 0;
        padding: 0;
    }
</style>





<script>



    @*<script>

        function DataParse() {
            var model = '@Html.Raw(Json.Encode(Model))';
            var data = JSON.parse(model);

            for (i = 0; i < data.length; i++) {
                ......
            }

            </script>*@
    var jsonModel = '@Html.Raw(ViewBag.jsonData)';
    var jsonSitters;
    if (jsonModel.length > 0)
    {
        jsonSitters = JSON.parse(jsonModel);
    }


    $(document).ready(function () {

        $('#datepicker1').datetimepicker({
            format: 'L'
        });
        $('#datetimepicker1').datetimepicker({
            format: 'LT'
        });
        $('#datetimepicker2').datetimepicker({
            format: 'LT'
        });

        //reservation from tomorrow
        $('#datepicker1').data("DateTimePicker").date(moment().add(1, 'days'));

        if ($("#FromTime").val() != "") {
            $("#datetimepicker1").data("DateTimePicker").date($("#FromTime").val());
        } else {
            $("#datetimepicker1").data("DateTimePicker").date(new Date());
        }
        if ($("#ToTime").val() != "") {
            $("#datetimepicker2").data("DateTimePicker").date($("#ToTime").val());
        }

        $('#btnSearch').click(function (e) {

            var serviceDate = $("#datepicker1").data("DateTimePicker").date().format("YYYY-MM-DD");
            var fromTime = $("#datetimepicker1").data("DateTimePicker").date().format("HH:mm");
            var toTime = $("#datetimepicker2").data("DateTimePicker").date().format("HH:mm");

            console.log(fromTime + " " + toTime);

            if (fromTime == null || toTime == null) {
                alert("Please enter correct reservation Time.");
                return false;
            }
            $("#ServiceDate").val(serviceDate);
            $("#FromTime").val(fromTime);
            $("#ToTime").val(toTime);
            document.getElementById("SearchSitterForm").submit();

        });

        $('#myModal').on('shown.bs.modal',
            function () {

                var sitterId = $("#openConfirmModal").data("sitterid");
                var userName = $("#openConfirmModal").data("username");
                var rateScore = $("#openConfirmModal").data("ratescore");
                var costPerHour = $("#openConfirmModal").data("costperhour");
                var totalServiceHours = $("#openConfirmModal").data("totalservicehours");
                var costForServiceHours = $("#openConfirmModal").data("costforservicehours");
                var platformFee = $("#openConfirmModal").data("platformfee");
                var totalCost = $("#openConfirmModal").data("totalcost");
                var hst = $("#openConfirmModal").data("hst");

                $("#sitterId").val(sitterId);
                $("#sitterUserName").val(userName);
                $("#rateScore").val(rateScore);
                $("#costPerHour").val(costPerHour);
                $("#totalServiceHours").val(totalServiceHours);
                $("#costForServiceHours").val(costForServiceHours);
                $("#platformFee").val(platformFee);
                $("#totalCost").val(totalCost);
                $("#hst").val(hst);




                //var idAttr = $('#openConfirmModal').attr('id');

                //alert("aaa");
            });

       
    });

    function openModalforConfirmation() {
        alert("Sorry. Development is not completed yet.!!!");
        //return false;
    }


</script>

<h2>Book a Sitter</h2>

@using (Html.BeginForm("SearchSitter", "Reservations", FormMethod.Post, new { data_ajax = "false", id = "SearchSitterForm" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.HiddenFor(m => m.ServiceDate)
        @Html.HiddenFor(m => m.FromTime)
        @Html.HiddenFor(m => m.ToTime)
        @Html.HiddenFor(m => m.User.Latitude)
        @Html.HiddenFor(m => m.User.Longitude)
        @*@Html.HiddenFor(m => m.SitterListMarkerJsonSerialized)*@


        <div class="form-group">

            <div class='col-sm-3'>
                <strong>Service Date:</strong>
                <div class='input-group date' id='datepicker1' name="datepicker1">
                    <input type='text' class="form-control" />
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-time"></span>
                    </span>
                </div>
            </div>

            <div class='col-sm-2'>
                <strong>Time From</strong>
                <div class='input-group date' id='datetimepicker1' name="datetimepicker1">
                    <input type='text' class="form-control" />
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-time"></span>
                    </span>
                </div>
            </div>
            <div class='col-sm-2'>
                <strong>Time To</strong>
                <div class='input-group date' id='datetimepicker2' name="datetimepicker2">
                    <input type='text' class="form-control" />
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-time"></span>
                    </span>
                </div>
            </div>

            <div class='col-sm-1 '>
                <br />
                <button type="button" id="btnSearch" class="btn btn-primary align-middle">Search</button>
            </div>

        </div>

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            <div id="map" class="col-sm-12"></div>
            <script src="/Content/js/CustomGoogleMapApi.js"></script>
            <script src="https://maps.googleapis.com/maps/api/js?key=@ViewBag.ApiKey&libraries=places&language=en-US&callback=initMap" async defer></script>
        </div>



        @*<div class="form-group">
                <div class="col-sm-2">
                    @Html.LabelFor(model => model.DayOfWeek, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-sm-10">
                    @Html.EnumDropDownListFor(model => model.DayOfWeek, "Select a Day", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.DayOfWeek, "", new { @class = "text-danger" })
                </div>
            </div>*@

    </div>


}


<!-- Modal -->
<!-- Modal -->
@using (Html.BeginForm("ReservationConfirmed", "Reservations", FormMethod.Post, new { data_ajax = "false", id = "formForReservationConfirmed" }))
{
    @Html.AntiForgeryToken()
    <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="myModalLabel">Confirm Your Reservation</h4>
                </div>
                <div class="modal-body">
                    <form>
                        <div class="form-group">
                            <h3>Service Date: @serviceDateString</h3>
                        </div>
                        <div class="form-group">
                            <h4>From: @fromTime&nbsp;&nbsp;~&nbsp;&nbsp;To: @toTime</h4>
                        </div>


                        <div class="form-group">

                            @*"Id,CustomerId,,ServiceDate,FromTime,ToTime,ReservationStatus,RegistrationDateTime,DateLastModified,CancelDateTime"*@

                            <input type="hidden" id="sitterId" name="sitterId" value="" />
                            <input type="hidden" id="serviceDate" name="ServiceDate" value="@serviceDate" />
                            <input type="hidden" id="fromTime" name="FromTime" value="@fromTime" />
                            <input type="hidden" id="toTime" name="ToTime" value="@toTime" />

                            <label for="sitterUserName" class="control-label">Sitter Name: </label>
                            <input type="text" class="form-control" readonly id="sitterUserName" name="sitterUserName">
                            <label for="rateScore" class="control-label">Rate Score:</label>
                            <input type="text" class="form-control" readonly id="rateScore">
                            <label for="costPerHour" class="control-label">Cost Per Hour($): </label>
                            <input type="text" class="form-control" readonly id="costPerHour" name="costPerHour">
                            <label for="totalServiceHours" class="control-label">Total Service Hours: </label>
                            <input type="text" class="form-control" readonly id="totalServiceHours">
                            <label for="costForServiceHours" class="control-label">Cost For ServiceHours: </label>
                            <input type="text" class="form-control" readonly id="costForServiceHours">
                            <label for="platformFee" class="control-label">Platform fee: </label>
                            <input type="text" class="form-control" readonly id="platformFee" name="PlatformFee">
                            <label for="totalCost" class="control-label">Total Cost(exclude for Hst): </label>
                            <input type="text" class="form-control" readonly id="totalCost" name="TotalCost">
                            <label for="hst" class="control-label">Hst: </label>
                            <input type="text" class="form-control" readonly id="hst" name="Hst">

                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Confirm</button>
                </div>
            </div>
        </div>
    </div>

}
